#!/bin/bash
###############################################################################
####									   ####
####				CHECK-IN SCRIPT				   ####
####				 DEVELOPED BY:				   ####
####			   STEVEN CATES & JON COFFEY			   ####
####									   ####
####	   	 *NOTE* Any empty echo commands are used soley		   ####
####	           for the readability of information given.		   ####
####									   ####
####		   !!ANY AND ALL INHERENT AND IMPLIED RIGHTS!!		   ####
####		 !!ARE FULLY AND SOLEY OWNED BY THE DEVELOPERS!!	   ####
####									   ####
###############################################################################

#function to get current datetime
function c_timestamp() {
	date | awk '{print $2,$3,$4}'
}

#Clear the screen
clear

#Preset the variable to a value
rightInfo=n

#User input to see if new or existing
printf "Please scan or enter PCID, or type (n) for new PCID: "
read PCID
echo

if [ "$PCID" == "n" ]; then
	#Store variables
	IDCOUNT=$(find ./* -type f -name '.IDCOUNT')
	PCID=$(cat "$IDCOUNT")

	#Display to user the next available PC ID
	echo '******************************'
	echo "Next PC ID is $PCID"
	echo

	#Type in the customer's name
	printf "Type in customer's name: "
	read cusName

	#Set more variables (locations)
	CUSFOLDER=$(find ./* -name "info.cus" -exec egrep -il "$cusName" {} \;)
	CUSFOLDER=$(echo ${CUSFOLDER%/*})
	LOGSFOLDER=$(find ./* -name 'CustomerLogs')

	#Check if customer doesn't have a folder
	if [ ! $CUSFOLDER ]; then
		#Make a directory in the correct location user customer's name, create customer info file, and open it in editor
		CUSFOLDER=$(echo "$cusName" | tr -d ' ')
		CUSFOLDER="$LOGSFOLDER/$CUSFOLDER"
		mkdir "$CUSFOLDER"
		echo "$cusName" >> "$CUSFOLDER/info.cus"
		nano "$CUSFOLDER/info.cus"
	#If they do have a folder already
	else
		#display customer info to verify if current and correct
		echo
		cat "$CUSFOLDER/info.cus"
		echo
		printf "Is this the correct customer information (y/n): "
		read rightInfo

		#If not correct, open in editor
		[ "$rightInfo" == "n" ] && nano "$CUSFOLDER/info.cus"
	fi

	#Make new folder for new computer under PC ID name
	PCFOLDER="$CUSFOLDER/$PCID"
	mkdir "$PCFOLDER"
	chmod -R 777 "$PCFOLDER"

	#Open PC notes
	echo -e "@@@@@ $(c_timestamp) @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" >> "$PCFOLDER/notes"
	nano "$PCFOLDER/notes"
	echo >> "$PCFOLDER/notes"

	#Create PC status file indicating it has been checked in, and make first line check-in and date
	echo -e "[$(c_timestamp)] Checked in computer." >> "$PCFOLDER/log"
	echo -e "ID$(expr $(cat $IDCOUNT | cut -c 3-) + 1)" > "$IDCOUNT"

	#make a default location file with NA
	echo "NA" > "$PCFOLDER/location"

	#make a default status file
	echo "NA" > "$PCFOLDER/status"

	#make log check file and mark it N
	echo "N" > "$PCFOLDER/ranLogs"

	#make a default contact status file
	echo "NA" > "$PCFOLDER/contactStatus"

	#make a check in date file
	date -R | awk '{print $3,$2,$4}' > "$PCFOLDER/check_in"

	#FUCK IT CHMOD ALL FUCKING FILES TO 777
	chmod -R 777 "$PCFOLDER"

	#check to see if status file was successfully created to indicate check-in
	if [ -f "$PCFOLDER/log" ]; then
		#Display to user that checkin was successful
		echo
		echo '*****************************'
		echo '** PC has been checked in. **'
		echo '*****************************'
		sleep 2
		exit
	else
		#Display error that check-in was unsuccessful
		echo "ERROR: COULD NOT CHECK IN COMPUTER. PLEASE CONTACT SUPPORT."
		sleep 3
		exit
	fi
fi
#Using PC ID set the PC folder location and the Customer Folder location in variables
PCFOLDER=$(find ./* -name "$PCID")
CUSFOLDER=$(echo "${PCFOLDER%/*}")
echo

#if the PC ID given doesn't have a corresponding folder, show an error and exit
if [ ! "$PCFOLDER" ]; then
	echo "ERROR: PC ID COULD NOT BE FOUND. PLEASE CHECK FOLDER AND TRY AGAIN"
	echo "OR CHECK IN AS NEW PC."
	sleep 3
	exit
fi

#if the PC ID given hasn't been checked in and, show an error and exit
if [ -f "$PCFOLDER/log" ]; then
	echo "ERROR: PC HAS ALREADY BEEN CHECKED IN OR WASN'T CHECKED OUT LAST TIME"
	sleep 3
	exit
fi

#echo customer info (name and phone) and check if info is current and correct
cat "$CUSFOLDER/info.cus"
echo
printf "Is this the correct customer information (y/n): "
read rightInfo

#If info isn't correct, then open up in editor and allow changes
[ "$rightInfo" == "n" ] && nano "$CUSFOLDER/info.cus"

#Open PC Notes
echo -e "*****$(c_timestamp)**********************************************" >> "$PCFOLDER/notes"
nano "$PCFOLDER/notes"
echo >> "$PCFOLDER/notes"

#Update status file of PC ID computer to reflect being checked in
echo -e "[$(c_timestamp)] Checked in computer." >> "$PCFOLDER/log"

#Make the location file and mark NA
echo "NA" > "$PCFOLDER/location"

#make log check file and mark it N
echo "N" > "$PCFOLDER/ranLogs"

#make a default status file
echo "NA" > "$PCFOLDER/status"

#make a default contact status file
echo "NA" > "$PCFOLDER/contactStatus"

#make a check in date file
date -R | awk '{print $3,$2,$4}' > "$PCFOLDER/check_in"

#FUCK IT CHMOD ALL FUCKING FILES TO 777
chmod -R 777 "$PCFOLDER"

#check to see if status file was successfully created to indicate check-in
if [ -f "$PCFOLDER/log" ]; then
	#Display to user that checkin was successful
	echo
	echo '*****************************'
	echo '** PC has been checked in. **'
	echo '*****************************'
	sleep 2
	exit
else
	#Display error that check-in was unsuccessful
	echo "ERROR: COULD NOT CHECK IN COMPUTER. PLEASE CONTACT SUPPORT."
	sleep 3
	exit
fi
